#!/bin/bash

# Wine-loader Creation tool
#
# Script for building dlls (actually wineloader) for each wine node. Is useful when working with different 
# builds of wine, or wineloaders that may be patched. This setup creates; ntdll, kernel32 and ntoskernel. 
# The script needs you to specify where the wine source code resides && where it is to be installed. In this case;
# 
# wine's source code:
#
# /winebox/storage/wine
#
# Destination node
#
# /winebox/node<N>
# 
# It then compiles and installs the dlls into each wine-node. (* by using the wine-node-config script).

CONTAINER="/winebox"                      # path to the container/folder for your wine-prefix[es] + wine-node(s)
FILEDIR="storage"                 # master node / wine-prefix we plan to symlink or copy data from, for node
WINE_NODE="node"$NODE""
WINEDIR="wine"
WT64="wine-tools64"
WT32="wine-tools32"
MK="dlls/ntdll dlls/kernel32 dlls/ntoskrnl.exe" 

# x64

# cd into source directory in container

cd "$CONTAINER"/"$FILEDIR"/"$WINEDIR"

# cleanup
make distclean
rm -rf wine-tools64

export PKG_CONFIG_PATH="/usr/lib/pkgconfig"

# make
mkdir -p wine-tools64
cd wine-tools64

"$CONTAINER"/"$FILEDIR"/"$WINEDIR"/configure --prefix="$CONTAINER"/"$WINE_NODE" --without-opencl --without-mpg123 --disable-tests --libdir="$CONTAINER"/"$WINE_NODE"/lib --enable-win64

make "$MK" CFLAGS+="-m64 -O2 -march=native -mtune=native" CXXFLAGS+="-m64 -O2 -march=native -mtune=native" install

sleep 2

# x86

cd "$CONTAINER"/"$FILEDIR"/"$WINEDIR"

# cleanup 
rm -rf wine-tools32

# make
mkdir -p wine-tools32
cd wine-tools32

export PKG_CONFIG_PATH="/usr/lib32/pkgconfig"

"$CONTAINER"/"$FILEDIR"/"$WINEDIR"/configure --prefix="$CONTAINER"/"$WINE_NODE" --without-opencl --without-mpg123 --disable-tests --libdir="$CONTAINER"/"$WINE_NODE"/lib32 --with-wine64="$CONTAINER"/"$FILEDIR"/"$WINEDIR"/"$WT64"

make "$MK" CFLAGS+="-m32 -O2 -march=native -mtune=native" CXXFLAGS+="-m32 -O2 -march=native -mtune=native" install

exit
